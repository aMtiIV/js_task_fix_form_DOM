{"mappings":"ACYA,SAAS,EAAS,CAAI,EACpB,IAAM,EAAQ,AAXhB,SAA6B,CAAI,CAAE,CAAS,EAC1C,IAAK,IAAI,EAU+B,EAVhB,EAAI,EAAK,MAAM,CAAE,IACvC,GAAI,CAAI,CAAC,EAAE,GAAK,CAAI,CAAC,EAAE,CAAC,WAAW,GACjC,OAAO,EAIX,OAAO,EACT,EAGoC,EAAM,UAExC,AAAI,AAAU,KAAV,EACK,EAGF,EAAK,KAAK,CAAC,EAAG,GAAS,IAAM,EAAS,EAAK,KAAK,CAAC,GAC1D,CAMA,IAAM,EAAS,SAAS,gBAAgB,CAAC,SAEpC,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAe,CAAA,CAAA,OAAA,QAAA,CAAA,GAAf,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAuB,CAAvB,IANe,EAMT,EAAN,EAAA,KAAA,CACG,EAAQ,SAAS,aAAa,CAAC,QAErC,CAAA,EAAM,SAAS,CAAG,cAClB,EAAM,YAAY,CAAC,MAAO,EAAM,EAAE,EAClC,EAAM,WAAW,CAAG,EAAS,EAAM,YAAY,CAAC,SAEhD,EAAM,WAAW,CAZV,CADW,EAaa,EAAM,YAAY,CAAC,SAZtC,KAAK,CAAC,EAAG,GAAG,WAAW,GAAK,EAAS,EAAK,KAAK,CAAC,IAAI,WAAW,GAa3E,EAAM,MAAM,CAAC,EACf,C,C,M,E,CATK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction getIndexOfBigLetter(text, fromIndex) {\n    for(var i = fromIndex; i < text.length; i++){\n        if (text[i] !== text[i].toLowerCase()) return i;\n    }\n    return -1;\n}\nfunction separate(text) {\n    var index = getIndexOfBigLetter(text, 1);\n    if (index === -1) return text;\n    return text.slice(0, index) + \" \" + separate(text.slice(index));\n}\nfunction capitalize(text) {\n    return text.slice(0, 1).toUpperCase() + separate(text.slice(1)).toLowerCase();\n}\nvar inputs = document.querySelectorAll(\"input\");\nvar _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\ntry {\n    for(var _iterator = inputs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n        var input = _step.value;\n        var label = document.createElement(\"label\");\n        label.className = \"field-label\";\n        label.setAttribute(\"for\", input.id);\n        label.textContent = separate(input.getAttribute(\"name\"));\n        input.placeholder = capitalize(input.getAttribute(\"name\"));\n        input.before(label);\n    }\n} catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n        }\n    } finally{\n        if (_didIteratorError) {\n            throw _iteratorError;\n        }\n    }\n}\n\n//# sourceMappingURL=index.945615f3.js.map\n","'use strict';\n\nfunction getIndexOfBigLetter(text, fromIndex) {\n  for (let i = fromIndex; i < text.length; i++) {\n    if (text[i] !== text[i].toLowerCase()) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction separate(text) {\n  const index = getIndexOfBigLetter(text, 1);\n\n  if (index === -1) {\n    return text;\n  }\n\n  return text.slice(0, index) + ' ' + separate(text.slice(index));\n}\n\nfunction capitalize(text) {\n  return text.slice(0, 1).toUpperCase() + separate(text.slice(1)).toLowerCase();\n}\n\nconst inputs = document.querySelectorAll('input');\n\nfor (const input of inputs) {\n  const label = document.createElement('label');\n\n  label.className = 'field-label';\n  label.setAttribute('for', input.id);\n  label.textContent = separate(input.getAttribute('name'));\n\n  input.placeholder = capitalize(input.getAttribute('name'));\n  input.before(label);\n}\n"],"names":["separate","text","index","getIndexOfBigLetter","fromIndex","i","length","toLowerCase","slice","inputs","document","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","input","value","label","createElement","className","setAttribute","id","textContent","getAttribute","placeholder","toUpperCase","before","err","return"],"version":3,"file":"index.945615f3.js.map"}